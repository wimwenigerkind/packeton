# In all environments, the following files are loaded if they exist,
# the latter taking precedence over the former:
#
#  * .env                contains default values for the environment variables needed by the app
#  * .env.local          uncommitted file with local overrides
#  * .env.$APP_ENV       committed environment-specific defaults
#  * .env.$APP_ENV.local uncommitted environment-specific overrides
#
# Real environment variables win over .env files.
#
# DO NOT DEFINE PRODUCTION SECRETS IN THIS FILE NOR IN ANY OTHER COMMITTED FILES.
# https://symfony.com/doc/current/configuration/secrets.html
#
# Run "composer dump-env prod" to compile .env files for production use (requires symfony/flex >=1.2).
# https://symfony.com/doc/current/best_practices.html#use-environment-variables-for-infrastructure-configuration

###> symfony/framework-bundle ###
APP_ENV=prod
APP_SECRET=09aea01942e85d3bbe0ecf727bfc3bd5
###< symfony/framework-bundle ###

DOCTRINE_DEPRECATIONS=none

###> doctrine/doctrine-bundle ###
# Format described at https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url
# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
#
# DATABASE_URL="sqlite:///%kernel.project_dir%/var/data.db"
# DATABASE_URL="mysql://app:!ChangeMe!@127.0.0.1:3306/app?serverVersion=8&charset=utf8mb4"
# DATABASE_URL="postgresql://app:!ChangeMe!@127.0.0.1:5432/app?serverVersion=14&charset=utf8"

DATABASE_URL="sqlite:///%kernel.project_dir%/var/app.db"
###< doctrine/doctrine-bundle ###

###> symfony/lock ###
# Choose one of the stores below
# postgresql+advisory://db_user:db_password@localhost/db_name
LOCK_DSN=flock
###< symfony/lock ###

###> symfony/mailer ###
MAILER_DSN=null://null
###< symfony/mailer ###

###> snc/redis-bundle ###
# passwords that contain special characters (@, %, :, +) must be urlencoded
REDIS_URL=redis://localhost
###< snc/redis-bundle ###

APP_COMPOSER_HOME="%kernel.project_dir%/var/.composer"

###> nelmio/cors-bundle ###
CORS_ALLOW_ORIGIN='^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$'
###< nelmio/cors-bundle ###

# For more security you can disable access with other hosts and HTTP Host Header Attack
TRUSTED_HOSTS=

# When Using a Reverse Proxy
#TRUSTED_PROXIES=172.16.0.0/12

###> packeton/oauth2 ###
# GitLab
# OAUTH_GITLAB_CLIENT_ID=
# OAUTH_GITLAB_CLIENT_SECRET=
# OAUTH_GITLAB_ALLOW_LOGIN=
# OAUTH_GITLAB_ALLOW_REGISTRATION=
# OAUTH_GITLAB_BASE_URL=
# OAUTH_GITLAB_DISABLE_ORG_HOOK=
# OAUTH_GITLAB_DISABLE_REP_HOOK=

# GitHub
# OAUTH_GITHUB_CLIENT_ID=
# OAUTH_GITHUB_CLIENT_SECRET=
# OAUTH_GITHUB_ALLOW_LOGIN=
# OAUTH_GITHUB_ALLOW_REGISTRATION=
# OAUTH_GITHUB_BASE_URL=
# OAUTH_GITHUB_DISABLE_ORG_HOOK=
# OAUTH_GITHUB_DISABLE_REP_HOOK=

# Gitea / BITBUCKET
# Use OAUTH_* prefix like GitLab/GitHub

# Google SSO
# OAUTH_GOOGLE_CLIENT_ID=
# OAUTH_GOOGLE_CLIENT_SECRET=
# OAUTH_GOOGLE_ALLOW_REGISTRATION=

#OAUTH_ENTRA_ID_TENANT_ID=
#OAUTH_ENTRA_ID_CLIENT_ID=
#OAUTH_ENTRA_ID_ALLOW_REGISTRATION=
#OAUTH_ENTRA_ID_CLIENT_SECRET=

###< packeton/oauth2 ###

###> zipball storage ###
STORAGE_SOURCE=local

# STORAGE_SOURCE=s3
# STORAGE_AWS_BUCKET=packeton-bucket
# STORAGE_AWS_PREFIX=packeton
# STORAGE_AWS_ARTIFACT_PREFIX=artifact

# See https://async-aws.com/clients/s3.html
# STORAGE_AWS_ARGS='{"endpoint": "https://s3.waw.io.cloud.ovh.net", "accessKeyId": "xxx", "accessKeySecret": "xxx", "region": "waw"}'
###< zipball storage ###
